<style>
    .carousel-inner .carousel-item {
        transition: transform 0.6s ease-in-out;
    }

    .carousel-item-next,
    .carousel-item-prev,
    .carousel-item.active {
        display: flex;
    }

    @media (min-width: 768px) {
        .carousel-inner .carousel-item-end.active,
        .carousel-inner .carousel-item-next {
            transform: translateX(50%);
        }

        .carousel-inner .carousel-item-start.active,
        .carousel-inner .carousel-item-prev {
            transform: translateX(-50%);
        }
    }

    .carousel-inner .carousel-item-end,
    .carousel-inner .carousel-item-start {
        transform: translateX(0);
    }
</style>

<div class="bracket-container mb-4" style="border: 1px solid #dee2e6; border-radius: 0.25rem; padding: 1rem;">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h5 class="mb-0"><i class="fas fa-sitemap me-2"></i>Bracket del Torneo</h5>
        <div>
            <button class="btn btn-sm btn-outline-secondary me-2" type="button" data-bs-target="#bracketCarousel" data-bs-slide="prev">
                <i class="fas fa-chevron-left"></i>
                <span class="visually-hidden">Anterior</span>
            </button>
            <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-target="#bracketCarousel" data-bs-slide="next">
                <i class="fas fa-chevron-right"></i>
                <span class="visually-hidden">Siguiente</span>
            </button>
        </div>
    </div>
    <div id="bracketCarousel" class="carousel slide" data-bs-interval="false">
        <div class="carousel-inner">
            <% let active = true; %>
            <% // Use mixedRounds generated by the presenter %>
            <%
                const mixedRoundLevels = viewModel?.bracketData?.mixedRounds ?
                    Object.keys(viewModel.bracketData.mixedRounds).sort((a, b) => parseInt(b) - parseInt(a)) : [];
            %>
            <% mixedRoundLevels.forEach((level, roundIndex) => { %>
                <div class="carousel-item <%= active ? 'active' : '' %>">
                    <% if (active) { active = false; } %>
                    <div class="px-2">
                        <div class="round-level-container d-flex flex-column"> <!-- Use flex-column for A above B -->
                            <% // Section for roundsA matches %>
                            <% if (bracketData.roundsA[level] && bracketData.roundsA[level].length > 0) { %>
                                <div class="round-section round-a-section">
                                    <% bracketData.roundsA[level].forEach((match, matchIndex) => { %>
                                        <div class="match">
                                            <div class="card">
                                                <div class="card-header text-center">
                                                    <%- match?.phaseLabel || level %>
                                                </div>
                                                <div class="card-body p-2">
                                                    <div class="text-muted text-center border-bottom mb-1 pb-1">
                                                        <small><i class="fas fa-clock me-1"></i> <%= match?.startTime || 'N/A' %></small>
                                                        <small class="ms-2"><i class="fas fa-map-marker-alt me-1"></i> <%= match?.courtName || 'N/A' %></small>
                                                    </div>
                                                    <div class="d-flex justify-content-around border-bottom mb-1 pb-1"><small>Team</small><small class="ms-2">Sets</small></div>
                                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                                        <small class="truncate-text"><strong>A</strong> <%= match.players.teamA.map(p => p.name).join('/') || 'Equipo A' %></small>
                                                        <div class="d-flex mx-1">
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set1 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set2 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set3 || '-' %></span>
                                                        </div>
                                                    </div>
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <small class="truncate-text"><strong>B</strong> <%= match.players.teamB.map(p => p.name).join('/') || 'Equipo B' %></small>
                                                        <div class="d-flex mx-1">
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set1 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set2 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set3 || '-' %></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-footer text-center p-1">
                                                    <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#scoreModal" data-match-id="<%= match.id %>">Registrar</button>
                                                </div>
                                            </div>
                                            <% // Connectors for roundsA %>
                                            <% if (roundIndex < mixedRoundLevels.length - 1) { %><div class="match-connector"></div><% } %>
                                            <% if (matchIndex % 2 === 0 && matchIndex < bracketData.roundsA[level].length - 1) { %><div class="round-connector-right" style="height: calc(100% + 30px); top: 50%;"></div><% } %>
                                        </div>
                                    <% }); %>
                                </div>
                            <% } %>

                            <% if (bracketData.roundsB[level] && bracketData.roundsB[level].length > 0) { %>
                                <div class="round-section round-b-section mt-3"> <!-- Add margin-top for separation -->
                                    <% bracketData.roundsB[level].forEach((match, matchIndex) => { %>
                                        <div class="match">
                                            <div class="card">
                                                <div class="card-header text-center">
                                                    <%- match?.phaseLabel || level %>
                                                </div>
                                                <div class="card-body p-2">
                                                    <div class="text-muted text-center border-bottom mb-1 pb-1">
                                                        <small><i class="fas fa-clock me-1"></i> <%= match?.startTime || 'N/A' %></small>
                                                        <small class="ms-2"><i class="fas fa-map-marker-alt me-1"></i> <%= match?.courtName || 'N/A' %></small>
                                                    </div>
                                                    <div class="d-flex justify-content-around border-bottom mb-1 pb-1"><small>Team</small><small class="ms-2">Sets</small></div>
                                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                                        <small class="truncate-text"><strong>A</strong> <%= match.players.teamA.map(p => p.name).join('/') || 'Equipo A' %></small>
                                                        <div class="d-flex mx-1">
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set1 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set2 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set3 || '-' %></span>
                                                        </div>
                                                    </div>
                                                    <div class="d-flex justify-content-between align-items-center">
                                                        <small class="truncate-text"><strong>B</strong> <%= match.players.teamB.map(p => p.name).join('/') || 'Equipo B' %></small>
                                                        <div class="d-flex mx-1">
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set1 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set2 || '-' %></span>
                                                            <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set3 || '-' %></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-footer text-center p-1">
                                                    <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#scoreModal" data-match-id="<%= match.id %>">Registrar</button>
                                                </div>
                                            </div>
                                            <% // Connectors for roundsB %>
                                            <% if (matchIndex % 2 === 0 && matchIndex < bracketData.roundsB[level].length - 1) { %><div class="round-connector-left" style="height: calc(100% + 30px); top: 50%;"></div><% } %>
                                            <% if (roundIndex > 0) { %><div class="match-connector-branch"></div><% } %>
                                        </div>
                                    <% }); %>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% }); %>

            <% // The final round remains separate %>
            <div class="carousel-item <%= active ? 'active' : '' %>">
                <% if (active) { active = false; } %>
                <div class="px-2">
                    <div class="round">
                        <% bracketData.final.forEach((match, matchIndex) => { %>
                            <div class="match">
                                <div class="card">
                                    <div class="card-header text-center"><h3 class="text-center">Final</h3></div>
                                    <div class="card-body p-2">
                                        <div class="text-muted text-center border-bottom mb-1 pb-1">
                                            <small><i class="fas fa-clock me-1"></i> <%= match.startTime || 'N/A' %></small>
                                            <small class="ms-2"><i class="fas fa-map-marker-alt me-1"></i> <%= match.courtName || 'N/A' %></small>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center mb-1">
                                            <small class="truncate-text"><strong>A</strong> <%= match.players.teamA.map(p => p.name).join('/') || 'Equipo A' %></small>
                                            <div class="d-flex mx-1">
                                                <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set1 || '-' %></span>
                                                <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set2 || '-' %></span>
                                                <span class="badge bg-light text-dark ml-1"><%= match?.score_teamA_set3 || '-' %></span>
                                            </div>
                                        </div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <small class="truncate-text"><strong>B</strong> <%= match.players.teamB.map(p => p.name).join('/') || 'Equipo B' %></small>
                                            <div class="d-flex mx-1">
                                                <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set1 || '-' %></span>
                                                <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set2 || '-' %></span>
                                                <span class="badge bg-light text-dark ml-1"><%= match?.score_teamB_set3 || '-' %></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-footer text-center p-1">
                                        <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#scoreModal" data-match-id="<%= match.id %>">Registrar</button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <% if (!mixedRoundLevels.length && !bracketData.final.length) { %>
                <div class="carousel-item active"><div class="alert alert-info">No hay datos del cuadro para mostrar.</div></div>
            <% } %>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
    const carousel = document.getElementById('bracketCarousel');
    if (!carousel) return;

    const items = carousel.querySelectorAll('.carousel-item');
    const carouselInstance = new bootstrap.Carousel(carousel, {
        interval: false,
        wrap: false
    });

    const updateClasses = () => {
        const activeItem = carousel.querySelector('.carousel-item.active');
        if (!activeItem) return;

        let next = activeItem.nextElementSibling;
        if (next && !next.classList.contains('carousel-item')) next = null; // Ensure it's a carousel item
        if (!next) next = carousel.querySelector('.carousel-item:first-child');

        let prev = activeItem.previousElementSibling;
        if (prev && !prev.classList.contains('carousel-item')) prev = null; // Ensure it's a carousel item
        if (!prev) prev = carousel.querySelector('.carousel-item:last-child');

        items.forEach(item => {
            item.classList.remove('carousel-item-next', 'carousel-item-prev', 'carousel-item-start', 'carousel-item-end');
        });

        // if (next) {
        //     next.classList.add('carousel-item-next');
        //     const nextNext = next.nextElementSibling || carousel.querySelector('.carousel-item:first-child');
        //     if (nextNext) nextNext.classList.add('carousel-item-end');
        // }
        // if (prev) {
        //     prev.classList.add('carousel-item-prev');
        //     const prevPrev = prev.previousElementSibling || carousel.querySelector('.carousel-item:last-child');
        //     if (prevPrev) prevPrev.classList.add('carousel-item-start');
        // }
    };

    carousel.addEventListener('slid.bs.carousel', updateClasses);
    updateClasses(); // Initial setup
});
</script>